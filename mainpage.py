# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainpage.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QMessageBox

sys.path.append('C:\\Users\\Vali\\Desktop\\pythonProject')
import bspline as sp
import verifyCheck as vc


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(812, 609)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)

        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)

        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0, 128))
        brush.setStyle(QtCore.Qt.SolidPattern)

        MainWindow.setPalette(palette)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.titlu = QtWidgets.QLabel(self.centralwidget)
        self.titlu.setGeometry(QtCore.QRect(0, 10, 801, 91))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(28)
        self.titlu.setFont(font)
        self.titlu.setAlignment(QtCore.Qt.AlignCenter)
        self.titlu.setObjectName("titlu")
        self.optiuniGrup = QtWidgets.QGroupBox(self.centralwidget)
        self.optiuniGrup.setGeometry(QtCore.QRect(30, 380, 761, 101))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(16)
        self.optiuniGrup.setFont(font)
        self.optiuniGrup.setObjectName("optiuniGrup")
        self.cubicRadio = QtWidgets.QRadioButton(self.optiuniGrup)
        self.cubicRadio.setGeometry(QtCore.QRect(140, 50, 91, 17))
        self.cubicRadio.setChecked(True)
        self.cubicRadio.setObjectName("cubicRadio")
        self.interRadio = QtWidgets.QRadioButton(self.optiuniGrup)
        self.interRadio.setGeometry(QtCore.QRect(420, 50, 141, 17))
        self.interRadio.setObjectName("interRadio")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(30, 200, 761, 181))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(16)
        self.tabWidget.setFont(font)
        self.tabWidget.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.textPuncte = QtWidgets.QTextEdit(self.tab)
        self.textPuncte.setGeometry(QtCore.QRect(20, 30, 711, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.textPuncte.setFont(font)
        self.textPuncte.setDocumentTitle("")
        self.textPuncte.setObjectName("textPuncte")
        self.puncteImplicit = QtWidgets.QPushButton(self.tab)
        self.puncteImplicit.setGeometry(QtCore.QRect(40, 100, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.puncteImplicit.setFont(font)
        self.puncteImplicit.setObjectName("puncteImplicit")
        self.puncteImplicit.clicked.connect(self.puncteAuto)
        self.label_2 = QtWidgets.QLabel(self.tab)
        self.label_2.setGeometry(QtCore.QRect(40, 70, 711, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setItalic(True)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.dirLabel = QtWidgets.QTextEdit(self.tab_2)
        self.dirLabel.setGeometry(QtCore.QRect(20, 30, 671, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.dirLabel.setFont(font)
        self.dirLabel.setDocumentTitle("")
        self.dirLabel.setReadOnly(True)
        self.dirLabel.setObjectName("dirLabel")
        self.fisierImplicit = QtWidgets.QPushButton(self.tab_2)
        self.fisierImplicit.setGeometry(QtCore.QRect(40, 100, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.fisierImplicit.setFont(font)
        self.fisierImplicit.setObjectName("fisierImplicit")
        self.fisierImplicit.clicked.connect(self.fisierAuto)
        self.label_3 = QtWidgets.QLabel(self.tab_2)
        self.label_3.setGeometry(QtCore.QRect(40, 70, 711, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setItalic(True)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.dirButton = QtWidgets.QPushButton(self.tab_2)
        self.dirButton.setGeometry(QtCore.QRect(690, 30, 41, 31))
        font = QtGui.QFont()
        font.setPointSize(7)
        self.dirButton.setFont(font)
        self.dirButton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("docIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.dirButton.setIcon(icon)
        self.dirButton.setIconSize(QtCore.QSize(50, 50))
        self.dirButton.setCheckable(True)
        self.dirButton.setObjectName("dirButton")
        self.dirButton.clicked.connect(self.fileClick)

        self.tabWidget.addTab(self.tab_2, "")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(30, 150, 761, 41))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(16)
        self.label.setFont(font)
        self.label.setFrameShape(QtWidgets.QFrame.Box)
        self.label.setFrameShadow(QtWidgets.QFrame.Raised)
        self.label.setLineWidth(1)
        self.label.setObjectName("label")
        self.vizualizareButton = QtWidgets.QPushButton(self.centralwidget)
        self.vizualizareButton.setGeometry(QtCore.QRect(310, 510, 181, 51))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(16)
        self.vizualizareButton.setFont(font)
        self.vizualizareButton.setObjectName("vizualizareButton")
        self.vizualizareButton.clicked.connect(self.readyClick)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.titlu.setText(_translate("MainWindow", "Curba B-Spline "))
        self.optiuniGrup.setTitle(_translate("MainWindow", "Optiuni"))
        self.cubicRadio.setText(_translate("MainWindow", "Cubic"))
        self.interRadio.setText(_translate("MainWindow", "Cu interpolare"))
        self.textPuncte.setPlaceholderText(_translate("MainWindow", "Introduceti punctele sub forma (x,y),(v,w),..."))
        self.puncteImplicit.setText(_translate("MainWindow", "Puncte Implicite"))
        self.label_2.setText(_translate("MainWindow",
                                        "Pentru introducerea rapida a unor puncte implicite apasati pe buntonul de mai jos!"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "De la tastatura"))
        self.dirLabel.setPlaceholderText(_translate("MainWindow",
                                                    "Alegeti un fisier text in care punctele sunt scrise sub forma \"(a,b),(c,d),...\" pe un singur rand"))
        self.fisierImplicit.setText(_translate("MainWindow", "Fisier Implicit"))
        self.label_3.setText(_translate("MainWindow",
                                        "Pentru introducerea rapida a unor puncte implicite apasati pe buntonul de mai jos!"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Prin fisier text"))
        self.label.setText(_translate("MainWindow", "Modul de introducere a datelor:"))
        self.vizualizareButton.setText(_translate("MainWindow", "Vizualizarea curbei"))

    def fileClick(self):
        fname = QFileDialog.getOpenFileName(self.tab_2, "File explorer", "", "Text files (*.txt)")
        if fname != "":
            self.dirLabel.setText(fname[0])

    def readyClick(self):
        tuple_array = []
        if self.tabWidget.currentIndex() == 0:
            if self.textPuncte.toPlainText() == "":
                msg = QMessageBox()
                msg.setWindowTitle("Eroare")
                msg.setText("Campul destinat scrierii punctelor este gol!")
                msg.setIcon(QMessageBox.Critical)
                x = msg.exec_()
                return
            elif vc.has_letters(self.textPuncte.toPlainText()) == True:
                msg = QMessageBox()
                msg.setWindowTitle("Eroare")
                msg.setText("Datele introduse contin litere!")
                msg.setIcon(QMessageBox.Critical)
                x = msg.exec_()
                return
            elif vc.check_pattern(self.textPuncte.toPlainText()) == False:
                msg = QMessageBox()
                msg.setWindowTitle("Eroare")
                msg.setText("Datele introduse nu respecta modelul specificat!")
                msg.setIcon(QMessageBox.Critical)
                x = msg.exec_()
                return
            elif vc.string_to_tuples(self.textPuncte.toPlainText()) == None:
                msg = QMessageBox()
                msg.setWindowTitle("Eroare")
                msg.setText("Informatiile nu sunt scrise in modul specificat!")
                msg.setIcon(QMessageBox.Critical)
                x = msg.exec_()
                return
            tuple_array = vc.string_to_tuples(self.textPuncte.toPlainText())
        else:
            if self.dirLabel.toPlainText() == "":
                msg = QMessageBox()
                msg.setWindowTitle("Eroare")
                msg.setText("Selectati un fisier text")
                msg.setIcon(QMessageBox.Critical)
                x = msg.exec_()
                return
            file_path = self.dirLabel.toPlainText()
            try:
                with open(file_path, "r") as file:
                    content = file.readline()
                    if content == "":
                        msg = QMessageBox()
                        msg.setWindowTitle("Eroare")
                        msg.setText("Fisierul este gol!")
                        msg.setIcon(QMessageBox.Critical)
                        x = msg.exec_()
                        return
                    elif vc.has_letters(content) == True:
                        msg = QMessageBox()
                        msg.setWindowTitle("Eroare")
                        msg.setText("Datele introduse contin litere!")
                        msg.setIcon(QMessageBox.Critical)
                        x = msg.exec_()
                        return
                    elif vc.check_pattern(content) == False:
                        msg = QMessageBox()
                        msg.setWindowTitle("Eroare")
                        msg.setText("Datele introduse nu respecta modelul specificat!")
                        msg.setIcon(QMessageBox.Critical)
                        x = msg.exec_()
                        return
                    elif vc.string_to_tuples(content) == None:
                        msg = QMessageBox()
                        msg.setWindowTitle("Eroare")
                        msg.setText("Formatul fisierului este incorect!")
                        msg.setIcon(QMessageBox.Critical)
                        x = msg.exec_()
                        return
            except FileNotFoundError:
                print(f"Fisierul '{file_path}' nu a fost gasit!")
            except IOError:
                print(f"Eroare la citirea fisierului '{file_path}'.")
            tuple_array = vc.string_to_tuples(content)
        if self.cubicRadio.isChecked():
            if not tuple_array:  # Check if tuple_array is empty
                print("Lista de tupluri este goala!")
            else:
                sp.justplot_cubic_bspline_curve(tuple_array)
                sp.plot_bspline_evolution(tuple_array)
        elif self.interRadio.isChecked():
            if not tuple_array:  # Check if tuple_array is empty
                print("Lista de tupluri este goala!")
            else:
                sp.justplot_bspline_interpolation(tuple_array)
                sp.interpolationFilm(tuple_array)

    def puncteAuto(self):
        self.textPuncte.setText("(1,3),(2,-1),(3,0),(4,7),(2,8),(0,7),(-2,2)")

    def fisierAuto(self):
        self.dirLabel.setText("C:\\Users\\Vali\\Desktop\\pythonProject\\testC.txt")


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
